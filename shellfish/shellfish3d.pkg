{"version":2,"resources":{"shf3d/camera.js":"\"use strict\";shRequire([__dirname+\"/entity.js\",__dirname+\"/util/m4.js\"],(entity,m4)=>{const d=new WeakMap;exports.Camera=class Camera extends entity.Entity{constructor(){super();d.set(this,{aspect:1,fieldOfView:45,projection:\"perspective\"});this.notifyable(\"aspect\");this.notifyable(\"fieldOfView\");this.notifyable(\"projection\")}get aspect(){return d.get(this).aspect}set aspect(a){d.get(this).aspect=a;this.aspectChanged();this.invalidate()}get fieldOfView(){return d.get(this).fieldOfView}set fieldOfView(v){d.get(this).fieldOfView=v;this.fieldOfViewChanged();this.invalidate()}get projection(){return d.get(this).projection}set projection(p){d.get(this).projection=p;this.projectionChanged();this.invalidate()}prepareScene(om,sceneInfo){if(sceneInfo.activeCamera===this||sceneInfo.activeCamera===null){const priv=d.get(this);const projectionMatrix=priv.projection===\"perspective\"?m4.perspective(priv.fieldOfView,priv.aspect,0.05,100):m4.orthographic(-10,10,-10,10,-10,10);sceneInfo.activeCamera=this;if(sceneInfo.vrFrameData){const fd=sceneInfo.vrFrameData;sceneInfo.viewMatrixL=m4.multiply(m4.transpose(fd.leftProjectionMatrix),m4.inverse(m4.multiply(om,m4.transpose(fd.leftViewMatrix))));sceneInfo.viewMatrixL=m4.multiply(m4.transpose(fd.rightProjectionMatrix),m4.inverse(m4.multiply(om,m4.transpose(fd.rightViewMatrix))))}else{sceneInfo.viewMatrixL=m4.multiply(projectionMatrix,m4.inverse(m4.multiply(om,this.matrix)));sceneInfo.viewMatrixR=sceneInfo.viewMatrixL}sceneInfo.cameraLocation=m4.multiplyVector(m4.multiply(om,this.matrix),[0,0,0,1])}}}});","shf3d/clone.js":"\"use strict\";shRequire([__dirname+\"/entity.js\",__dirname+\"/util/m4.js\"],(entity,m4)=>{const d=new WeakMap;exports.Clone=class Clone extends entity.Entity{constructor(){super();d.set(this,{entity:null});this.notifyable(\"entity\")}get entity(){return d.get(this).entity}set entity(e){d.get(this).entity=e;if(!e.parent){e.parent=this}e.connect(\"invalidate\",this,()=>{this.invalidate()});this.entityChanged();this.invalidate()}prepareScene(om,sceneInfo){const priv=d.get(this);if(priv.entity&&priv.entity.visible){const matrix=m4.multiply(om,this.matrix);priv.entity.prepareScene(matrix,sceneInfo)}}renderScene(gl,om,sceneInfo){const priv=d.get(this);if(priv.entity&&priv.entity.visible){const matrix=m4.multiply(om,this.matrix);priv.entity.renderScene(gl,matrix,sceneInfo)}}collisionsWith(v){const priv=d.get(this);const transformed=m4.multiplyVector(this.inverseMatrix,v);return priv.entity?priv.entity.collisionsWith(transformed):[]}}});","shf3d/collider.js":"\"use strict\";shRequire([__dirname+\"/entity.js\",__dirname+\"/util/m4.js\"],(entity,m4)=>{const d=new WeakMap;exports.Collider=class Collider extends entity.Entity{constructor(){super();d.set(this,{collisions:[],enabled:true});this.notifyable(\"collisions\");this.notifyable(\"enabled\")}get collisions(){return d.get(this).collisions}get enabled(){return d.get(this).enabled}set enabled(v){d.get(this).enabled=v;this.enabledChanged();if(!v){this.collide([])}this.invalidate()}collide(objs){d.get(this).collisions=objs;this.collisionsChanged()}prepareScene(om,sceneInfo){if(d.get(this).enabled){const v=m4.multiplyVector(om,[this.location.x,this.location.y,this.location.z,1]);sceneInfo.colliders.push({vertex:v,target:this})}}}});","shf3d/cube.js":"\"use strict\";shRequire([__dirname+\"/mesh.js\",__dirname+\"/util/util.js\",__dirname+\"/util/m4.js\"],(mesh,util,m4)=>{const VERTICES=[[-0.5,0.5,0.5],[0.5,0.5,0.5],[0.5,-0.5,0.5],[-0.5,-0.5,0.5],[-0.5,0.5,-0.5],[0.5,0.5,-0.5],[0.5,-0.5,-0.5],[-0.5,-0.5,-0.5]];const TEX_ANCHORS=[[0,0],[1,0],[1,1],[0,1]];const SURFACES=util.rectSurfaces([0,1,2,3],[],[0,1,2,3]).concat(util.rectSurfaces([4,5,1,0],[],[0,1,2,3])).concat(util.rectSurfaces([1,5,6,2],[],[0,1,2,3])).concat(util.rectSurfaces([3,2,6,7],[],[0,1,2,3])).concat(util.rectSurfaces([4,0,3,7],[],[0,1,2,3])).concat(util.rectSurfaces([5,4,7,6],[],[0,1,2,3]));const d=new WeakMap;exports.Cube=class Cube extends mesh.Mesh{constructor(){super();d.set(this,{material:null});this.notifyable(\"material\");this.onMaterialChanged=()=>{this.invalidate()};this.buildMesh(VERTICES,[],TEX_ANCHORS,SURFACES)}get material(){return d.get(this).material}set material(m){if(d.get(this).material){d.get(this).material.disconnect(\"invalidate\",this)}d.get(this).material=m;if(!m.parent){m.parent=this}this.assignMaterial(m,0,11);m.connect(\"invalidate\",this,()=>{this.invalidate()});this.materialChanged()}collisionsWith(v){const transformed=m4.multiplyVector(this.inverseMatrix,v);if(Math.abs(transformed[0])<=0.5&&Math.abs(transformed[1])<=0.5&&Math.abs(transformed[2])<=0.5){return[this]}else{return[]}}}});","shf3d/entity.js":"\"use strict\";shRequire([\"shellfish/mid\",__dirname+\"/util/util.js\",__dirname+\"/util/m4.js\"],(mid,util,m4)=>{function vec3(x,y,z){return{x,y,z,length:function(){return vec3Length(this)},scale:function(s){return vec3Scale(this,s)},add:function(other){return vec3Add(this,other)},subtract:function(other){return vec3Subtract(this,other)}}}function vec3Length(v){return Math.sqrt(v.x*v.x+v.y*v.y+v.z*v.z)}function vec3Scale(v,s){return vec3(v.x*s,v.y*s,v.z*s)}function vec3Add(v1,v2){return vec3(v1.x+v2.x,v1.y+v2.y,v1.z+v2.z)}function vec3Subtract(v1,v2){return vec3(v1.x-v2.x,v1.y-v2.y,v1.z-v2.z)}function vec3Interpolate(v1,v2,x){return v1.add(v2.subtract(v1).scale(x))}const d=new WeakMap;exports.Entity=class Entity extends mid.Object{constructor(){super();d.set(this,{scheduledFunctions:[],location:this.vec3(0,0,0),rotationAxis:this.vec3(0,1,0),rotationAngle:0,rotationQuaternion:[0,0,0,0],scale:this.vec3(1,1,1),visible:true,inverseMatrix:m4.identity()});this.notifyable(\"location\");this.notifyable(\"matrix\");this.notifyable(\"visible\");this.notifyable(\"rotationAxis\");this.notifyable(\"rotationAngle\");this.notifyable(\"scale\");this.transitionable(\"location\",vec3Interpolate);this.transitionable(\"rotationAngle\");this.transitionable(\"scale\",vec3Interpolate);this.registerEvent(\"invalidate\");this.onMatrixChanged=()=>{d.get(this).inverseMatrix=m4.inverse(this.matrix);this.invalidate()}}get visible(){return d.get(this).visible}set visible(v){d.get(this).visible=v;this.visibleChanged();this.invalidate()}get matrix(){const priv=d.get(this);const phi=priv.rotationAngle/180*Math.PI;const c=Math.cos(phi/2);const s=Math.sin(phi/2);const len=priv.rotationAxis.length();const normalizedAxis=len!==0?priv.rotationAxis.scale(1/len):priv.rotationAxis;priv.rotationQuaternion=[c,normalizedAxis.x*s,normalizedAxis.y*s,normalizedAxis.z*s];return m4.multiply(m4.translation(priv.location.x,priv.location.y,priv.location.z),m4.multiply(m4.scaling(priv.scale.x,priv.scale.y,priv.scale.z),m4.rotationByQuaternion(priv.rotationQuaternion)))}get inverseMatrix(){return d.get(this).inverseMatrix}get rotationAxis(){return d.get(this).rotationAxis}set rotationAxis(a){d.get(this).rotationAxis=a;this.rotationAxisChanged();this.matrixChanged()}get rotationAngle(){return d.get(this).rotationAngle}set rotationAngle(a){d.get(this).rotationAngle=a;this.rotationAngleChanged();this.matrixChanged()}get rotationQuaternion(){return d.get(this).rotationQuaternion}get location(){return d.get(this).location}set location(l){if(l){d.get(this).location=l;this.locationChanged();this.matrixChanged()}else{throw new Error(\"Invalid vec3 value.\")}}get scale(){return d.get(this).scale}set scale(s){if(s){d.get(this).scale=s;this.scaleChanged();this.matrixChanged()}else{throw new Error(\"Invalid vec3 value.\")}}vec3(x,y,z){return vec3(x,y,z)}schedule(f){d.get(this).scheduledFunctions.push(f)}prepare(gl){d.get(this).scheduledFunctions.forEach(f=>{f(gl)});d.get(this).scheduledFunctions=[]}move(dv){const priv=d.get(this);const rm=m4.rotationByQuaternion(priv.rotationQuaternion);const xv=m4.multiplyVector(rm,[dv.x,0,0,1]);const yv=m4.multiplyVector(rm,[0,dv.y,0,1]);const zv=m4.multiplyVector(rm,[0,0,dv.z,1]);const delta=util.elementWise(util.elementWise(xv,yv,util.PLUS),zv,util.PLUS);this.change(\"location\",vec3(this.location.x+delta[0],this.location.y+delta[1],this.location.z+delta[2]))}collisionsWith(v){return[]}prepareScene(om,sceneInfo){}renderScene(gl,om,sceneInfo){}}});","shf3d/group.js":"\"use strict\";shRequire([__dirname+\"/entity.js\",__dirname+\"/util/m4.js\"],(entity,m4)=>{const d=new WeakMap;exports.Group=class Group extends entity.Entity{constructor(){super();d.set(this,{})}prepareScene(om,sceneInfo){const matrix=m4.multiply(om,this.matrix);this.children.filter(c=>c.prepareScene&&c.visible).forEach(obj=>{obj.prepareScene(matrix,sceneInfo)})}renderScene(gl,om,sceneInfo){const matrix=m4.multiply(om,this.matrix);this.children.filter(c=>c.renderScene&&c.visible).forEach(obj=>{obj.renderScene(gl,matrix,sceneInfo)})}collisionsWith(v){const colls=[];const cs=this.children.filter(c=>c.collisionsWith&&c.visible);const transformed=m4.multiplyVector(this.inverseMatrix,v);for(let i=0;i<cs.length;++i){colls.push(...cs[i].collisionsWith(transformed));if(colls.length>0){break}}return colls}add(child){child.parent=this;child.connect(\"invalidate\",this,()=>{this.invalidate()})}}});","shf3d/heightmesh.js":"\"use strict\";shRequire([__dirname+\"/mesh.js\",__dirname+\"/util/util.js\"],(mesh,util)=>{const d=new WeakMap;exports.HeightMesh=class HeightMesh extends mesh.Mesh{constructor(){super();d.set(this,{status:\"empty\",material:null,source:\"\",columns:100,rows:100,vertices:[],texAnchors:[],surfaces:[]});this.notifyable(\"material\");this.notifyable(\"source\");this.notifyable(\"status\");this.onMaterialChanged=()=>{this.invalidate()};const priv=d.get(this);const vertices=[];const normals=[];const texAnchors=[];const surfaces=[];for(let row=0;row<priv.rows;++row){for(let col=0;col<priv.columns;++col){vertices.push([col/priv.columns-0.5,0,row/priv.rows-0.5]);texAnchors.push([col/priv.columns,row/priv.rows]);if(row>0&&col>0){const p1=(row-1)*priv.columns+(col-1);const p2=(row-1)*priv.columns+col;const p3=row*priv.columns+col;const p4=row*priv.columns+(col-1);surfaces.push(...util.rectSurfaces([p1,p2,p3,p4],[p1,p2,p3,p4],[p1,p2,p3,p4]))}normals.push([0,1,0])}}priv.vertices=vertices;priv.texAnchors=texAnchors;priv.surfaces=surfaces;this.buildMesh(vertices,normals,texAnchors,surfaces.slice())}get status(){return d.get(this).status}get material(){return d.get(this).material}set material(m){const priv=d.get(this);if(priv.material){priv.material.disconnect(\"invalidate\",this)}priv.material=m;if(!m.parent){m.parent=this}this.assignMaterial(m,0,(priv.rows-2)*(priv.columns-2)*2);m.connect(\"invalidate\",this,()=>{this.invalidate()});this.materialChanged();this.invalidate()}get source(){return d.get(this).source}set source(s){const priv=d.get(this);priv.source=s;this.sourceChanged();priv.status=\"loading\";this.statusChanged();const img=new Image;img.onload=()=>{const cnv=document.createElement(\"canvas\");cnv.width=priv.columns;cnv.height=priv.rows;const ctx=cnv.getContext(\"2d\");ctx.drawImage(img,0,0,cnv.width,cnv.height);const data=ctx.getImageData(0,0,priv.columns,priv.rows);for(let row=0;row<priv.rows;++row){for(let col=0;col<priv.columns;++col){const pos=row*priv.columns+col;const pixel=data.data[pos*4];const v=priv.vertices[pos];v[1]=pixel/255}}const normals=[];for(let row=0;row<priv.rows;++row){for(let col=0;col<priv.columns;++col){if(row>0&&col>0&&row<priv.rows-1&&col<priv.columns-1){const p11=(row-1)*priv.columns+(col-1);const p12=row*priv.columns+col;const p13=(row-1)*priv.columns+col;const p21=(row-1)*priv.columns+col;const p22=row*priv.columns+col;const p23=(row-1)*priv.columns+(col+1);const p31=(row+1)*priv.columns+(col-1);const p32=row*priv.columns+col;const p33=row*priv.columns+(col-1);const p41=row*priv.columns+(col+1);const p42=row*priv.columns+col;const p43=(row+1)*priv.columns+col;const normal1=util.surfaceNormal(priv.vertices[p11],priv.vertices[p12],priv.vertices[p13]);const normal2=util.surfaceNormal(priv.vertices[p21],priv.vertices[p22],priv.vertices[p23]);const normal3=util.surfaceNormal(priv.vertices[p31],priv.vertices[p32],priv.vertices[p33]);const normal4=util.surfaceNormal(priv.vertices[p41],priv.vertices[p42],priv.vertices[p43]);const normal=[normal2,normal3,normal4].reduce((a,b)=>{return util.interpolateVector(a,b)},normal1);normals.push(normal)}else{normals.push([0,1,0])}}}this.buildMesh(priv.vertices,normals,priv.texAnchors,priv.surfaces.slice());priv.status=\"success\";this.statusChanged();this.invalidate()};img.onerror=err=>{console.error(\"Failed to load height map: \"+s);priv.status=\"error\";this.statusChanged()};console.log(\"Loading height map: \"+s);img.src=shRequire.resource(s)}heightAt(s,t){const priv=d.get(this);const x1=Math.max(0,Math.min(priv.columns-1,Math.floor(s)));const x2=Math.max(0,Math.min(priv.columns-1,Math.ceil(s)));const y1=Math.max(0,Math.min(priv.rows-1,Math.floor(t)));const y2=Math.max(0,Math.min(priv.rows-1,Math.ceil(t)));const xOffset=x2>x1?(s-x1)/(x2-x1):0;const yOffset=y2>y1?(t-y1)/(y2-y1):0;const h1=priv.vertices[y1*priv.columns+x1][1];const h2=priv.vertices[y1*priv.columns+x2][1];const h3=priv.vertices[y2*priv.columns+x1][1];const hx=h1+(h2-h1)*xOffset;const hy=h1+(h3-h1)*yOffset;return(hx+hy)/2}}});","shf3d/light.js":"\"use strict\";shRequire([__dirname+\"/entity.js\",__dirname+\"/util/color.js\",__dirname+\"/util/m4.js\"],(entity,colUtil,m4)=>{const d=new WeakMap;exports.Light=class Light extends entity.Entity{constructor(){super();d.set(this,{color:colUtil.rgb(1,1,1),range:100});this.notifyable(\"color\");this.notifyable(\"range\");this.transitionable(\"color\",colUtil.colorInterpolate)}get color(){return d.get(this).color}set color(c){d.get(this).color=c;this.colorChanged();this.invalidate()}get range(){return d.get(this).range}set range(r){d.get(this).range=r;this.rangeChanged();this.invalidate()}rgba(r,g,b,a){return colUtil.rgba(r,g,b,a)}rgb(r,g,b){return colUtil.rgb(r,g,b)}colorName(name){return colUtil.color(name)}prepareScene(om,sceneInfo){const v=m4.multiplyVector(m4.multiply(om,this.matrix),[0,0,0,1]);sceneInfo.lights.push({x:v[0],y:v[1],z:v[2],color:this.color,range:this.range})}}});","shf3d/material.js":"\"use strict\";shRequire([\"shellfish/mid\",__dirname+\"/util/color.js\",__dirname+\"/util/m4.js\"],(mid,colUtil,m4)=>{const VERTEX_SHADER=`\n        attribute vec4 vPos;\n        attribute vec4 vNormal;\n        attribute vec4 vTangent;\n        attribute vec2 vTexCoord;\n        \n        varying vec4 fPos;\n        varying vec4 fNormal;\n        varying vec4 fTangent;\n        varying vec2 fTexCoord;\n        varying mat3 fTbn;\n        \n        uniform mat4 om;\n        uniform mat4 vm;\n\n        void main()\n        {\n            highp vec4 objPos = om * vPos;\n\n            fPos = objPos;\n            fNormal = vNormal;\n            fTangent = vTangent;\n            fTexCoord = vTexCoord;\n\n            vec4 bt = vec4(cross(vTangent.xyz, vNormal.xyz), 0.0);\n            fTbn = mat3(\n                normalize(vec3(vTangent)),\n                normalize(vec3(bt)),\n                normalize(vec3(vNormal))\n            );\n\n            gl_Position = vm * objPos;\n        }\n    `;const FRAGMENT_SHADER=`\n        precision mediump float;\n    \n        varying vec4 fPos;\n        varying vec4 fNormal;\n        varying vec4 fTangent;\n        varying vec2 fTexCoord;\n        varying mat3 fTbn;\n        \n        uniform vec4 ambience;\n        \n        uniform vec4 cameraLocation;\n\n        uniform int numLights;\n        uniform vec4 lightPos[16];\n        uniform vec4 lightColor[16];\n        uniform float lightRange[16];\n\n        uniform vec4 diffuseColor;\n        uniform vec4 specularColor;\n        uniform vec4 emissiveColor;\n        uniform float shininess;\n        uniform float opacity;\n\n        uniform bool hasTexture;\n        uniform bool hasBumpTexture;\n        uniform sampler2D texture;\n        uniform sampler2D bumpTexture;\n        uniform float textureRepeatS;\n        uniform float textureRepeatT;\n\n        uniform mat4 nm;\n\n        void main()\n        {\n            if (opacity < 0.1)\n            {\n                discard;\n            }\n\n            vec3 viewDirection = normalize(cameraLocation.xyz - fPos.xyz);\n            float specularStrength = 0.5;\n            vec4 diffuseReflection = diffuseColor;\n            \n            vec3 normal;\n            if (hasBumpTexture)\n            {\n                normal = normalize(texture2D(bumpTexture, fTexCoord.st).rgb * 2.0 - 1.0);\n                normal = fTbn * normal;\n            }\n            else\n            {\n                normal = fNormal.xyz;\n            }\n            normal = normalize(vec3(nm * vec4(normal, 0.0)));\n\n            if (hasTexture)\n            {\n                vec4 texColor = texture2D(texture, vec2(fTexCoord.s * textureRepeatS, fTexCoord.t * textureRepeatT));\n                if (texColor.a < 0.01)\n                {\n                    //discard();\n                }\n                diffuseReflection *= vec4(texColor.rgb, 1.0);\n            }\n\n            vec4 reflectionColor = emissiveColor + diffuseReflection * ambience;\n            \n            for (int i = 0; i < 16; ++i)\n            {\n                if (i >= numLights)\n                {\n                    break;\n                }\n                vec3 lightVector = lightPos[i].xyz - fPos.xyz;\n                float lightDistance = length(lightVector);\n                vec3 lightDirection = normalize(lightVector);\n                vec3 halfDirection = normalize(lightDirection + viewDirection);\n                \n                float diffuseImpact = max(dot(lightDirection, normal), 0.0);\n                float spec = pow(max(dot(normal, halfDirection), 0.0), shininess);\n\n                vec4 specularReflection = specularStrength * spec * specularColor;\n                if (dot(lightDirection, normal) < 0.0)\n                {\n                    specularReflection = vec4(0, 0, 0, 1);\n                }\n                float attenuation = clamp(1.0 - lightDistance / lightRange[i], 0.0, 1.0);\n                attenuation *= attenuation;\n\n                reflectionColor += (diffuseReflection * diffuseImpact +\n                                    specularReflection) *\n                                   lightColor[i] * attenuation;\n\n                //gl_FragColor = vec4((viewDirection.rgb + 1.0 / 2.0), 1.0);\n                //break;\n            }\n            \n            gl_FragColor = vec4(reflectionColor.rgb, opacity);\n            //gl_FragColor = vec4((normal.rgb + 1.0 / 2.0), 1.0);\n        }\n    `;const programInfos=new WeakMap;const d=new WeakMap;exports.Material=class Material extends mid.Object{constructor(){super();d.set(this,{color:colUtil.rgb(1,1,1),emissiveColor:colUtil.rgb(0,0,0),opacity:1,shininess:16,source:\"\",columns:1,rows:1,bumpSource:\"\",texture:null,bumpTexture:null,scheduledFunctions:[]});this.notifyable(\"bumpSource\");this.notifyable(\"color\");this.notifyable(\"columns\");this.notifyable(\"emissiveColor\");this.notifyable(\"opacity\");this.notifyable(\"rows\");this.notifyable(\"shininess\");this.notifyable(\"source\");this.transitionable(\"color\",colUtil.colorInterpolate);this.transitionable(\"emissiveColor\",colUtil.colorInterpolate);this.registerEvent(\"invalidate\");this.schedule(gl=>{this.initGl(gl)})}get emissiveColor(){return d.get(this).emissiveColor}set emissiveColor(c){d.get(this).emissiveColor=c;this.emissiveColorChanged();this.invalidate()}get color(){return d.get(this).color}set color(c){d.get(this).color=c;this.colorChanged();this.invalidate()}get opacity(){return d.get(this).opacity}set opacity(o){d.get(this).opacity=o;this.opacityChanged();this.invalidate()}get shininess(){return d.get(this).shininess}set shininess(s){d.get(this).shininess=s;this.shininessChanged();this.invalidate()}get columns(){return d.get(this).columns}set columns(c){d.get(this).columns=c;this.columnsChanged();this.invalidate()}get rows(){return d.get(this).rows}set rows(r){d.get(this).rows=r;this.rowsChanged();this.invalidate()}get bumpSource(){return d.get(this).bumpSource}set bumpSource(b){const priv=d.get(this);priv.bumpSource=b;this.bumpSourceChanged();const img=new Image;img.onload=()=>{this.schedule(gl=>{priv.bumpTexture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,priv.bumpTexture);gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,false);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,img);gl.generateMipmap(gl.TEXTURE_2D);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.bindTexture(gl.TEXTURE_2D,null);this.invalidate()})};img.onerror=err=>{console.error(\"Failed to load bump map: \"+b)};console.log(\"Loading bump map: \"+b);img.src=shRequire.resource(b)}get source(){return d.get(this).source}set source(s){const priv=d.get(this);priv.source=s;this.sourceChanged();const img=new Image;img.onload=()=>{this.schedule(gl=>{priv.texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,priv.texture);gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,false);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,img);gl.generateMipmap(gl.TEXTURE_2D);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.REPEAT);gl.bindTexture(gl.TEXTURE_2D,null);this.invalidate()})};img.onerror=err=>{console.error(\"Failed to load texture: \"+s)};console.log(\"Loading texture: \"+s);img.src=shRequire.resource(s)}rgba(r,g,b,a){return colUtil.rgba(r,g,b,a)}rgb(r,g,b){return colUtil.rgb(r,g,b)}colorName(name){return colUtil.color(name)}schedule(f){d.get(this).scheduledFunctions.push(f)}prepare(gl){d.get(this).scheduledFunctions.forEach(f=>{f(gl)});d.get(this).scheduledFunctions=[]}initGl(gl){if(!programInfos.get(gl)){const programId=gl.createProgram();const vShaderId=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vShaderId,VERTEX_SHADER);gl.compileShader(vShaderId);if(!gl.getShaderParameter(vShaderId,gl.COMPILE_STATUS)){const info=gl.getShaderInfoLog(vShaderId);throw\"Failed to compile vertex shader: \"+info}gl.attachShader(programId,vShaderId);const fShaderId=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fShaderId,FRAGMENT_SHADER);gl.compileShader(fShaderId);if(!gl.getShaderParameter(fShaderId,gl.COMPILE_STATUS)){const info=gl.getShaderInfoLog(fShaderId);throw\"Failed to compile fragment shader: \"+info}gl.attachShader(programId,fShaderId);gl.linkProgram(programId);if(!gl.getProgramParameter(programId,gl.LINK_STATUS)){const info=gl.getProgramInfoLog(programId);throw\"Failed to link GLSL program: \"+info}gl.useProgram(programId);programInfos.set(gl,{id:programId,uniforms:{viewMatrix:gl.getUniformLocation(programId,\"vm\"),objectMatrix:gl.getUniformLocation(programId,\"om\"),normalMatrix:gl.getUniformLocation(programId,\"nm\"),cameraLocation:gl.getUniformLocation(programId,\"cameraLocation\"),ambience:gl.getUniformLocation(programId,\"ambience\"),numLights:gl.getUniformLocation(programId,\"numLights\"),lightPos:gl.getUniformLocation(programId,\"lightPos\"),lightColor:gl.getUniformLocation(programId,\"lightColor\"),lightRange:gl.getUniformLocation(programId,\"lightRange\"),diffuseColor:gl.getUniformLocation(programId,\"diffuseColor\"),emissiveColor:gl.getUniformLocation(programId,\"emissiveColor\"),specularColor:gl.getUniformLocation(programId,\"specularColor\"),opacity:gl.getUniformLocation(programId,\"opacity\"),shininess:gl.getUniformLocation(programId,\"shininess\"),hasTexture:gl.getUniformLocation(programId,\"hasTexture\"),texture:gl.getUniformLocation(programId,\"texture\"),hasBumpTexture:gl.getUniformLocation(programId,\"hasBumpTexture\"),bumpTexture:gl.getUniformLocation(programId,\"bumpTexture\"),textureRepeatS:gl.getUniformLocation(programId,\"textureRepeatS\"),textureRepeatT:gl.getUniformLocation(programId,\"textureRepeatT\")},attribs:{vertex:gl.getAttribLocation(programId,\"vPos\"),normal:gl.getAttribLocation(programId,\"vNormal\"),tangent:gl.getAttribLocation(programId,\"vTangent\"),texture:gl.getAttribLocation(programId,\"vTexCoord\")}})}}apply(gl,entityInfo){}bind(gl,om,sceneInfo,entityInfo){this.prepare(gl);const programInfo=programInfos.get(gl);const priv=d.get(this);gl.useProgram(programInfo.id);gl.bindBuffer(gl.ARRAY_BUFFER,entityInfo.buffer.vertex);gl.vertexAttribPointer(programInfo.attribs.vertex,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(programInfo.attribs.vertex);gl.bindBuffer(gl.ARRAY_BUFFER,entityInfo.buffer.normal);gl.vertexAttribPointer(programInfo.attribs.normal,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(programInfo.attribs.normal);gl.bindBuffer(gl.ARRAY_BUFFER,entityInfo.buffer.tangent);gl.vertexAttribPointer(programInfo.attribs.tangent,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(programInfo.attribs.tangent);gl.bindBuffer(gl.ARRAY_BUFFER,entityInfo.buffer.texture);gl.vertexAttribPointer(programInfo.attribs.texture,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(programInfo.attribs.texture);gl.uniformMatrix4fv(programInfo.uniforms.viewMatrix,false,new Float32Array(m4.transpose(sceneInfo.viewMatrix)));gl.uniformMatrix4fv(programInfo.uniforms.objectMatrix,false,new Float32Array(m4.transpose(om)));gl.uniformMatrix4fv(programInfo.uniforms.normalMatrix,false,new Float32Array(m4.inverse(om)));gl.uniform4fv(programInfo.uniforms.cameraLocation,new Float32Array(sceneInfo.cameraLocation));gl.uniform4fv(programInfo.uniforms.ambience,new Float32Array(sceneInfo.ambience.toArray()));gl.uniform4fv(programInfo.uniforms.diffuseColor,new Float32Array(priv.color.toArray()));gl.uniform4fv(programInfo.uniforms.emissiveColor,new Float32Array(priv.emissiveColor.toArray()));gl.uniform4fv(programInfo.uniforms.specularColor,new Float32Array([1,1,1,1]));gl.uniform1f(programInfo.uniforms.shininess,priv.shininess);gl.uniform1f(programInfo.uniforms.opacity,priv.opacity);if(d.get(this).texture){gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,d.get(this).texture);gl.uniform1i(programInfo.uniforms.texture,0);gl.uniform1i(programInfo.uniforms.hasTexture,1);gl.uniform1f(programInfo.uniforms.textureRepeatS,priv.columns);gl.uniform1f(programInfo.uniforms.textureRepeatT,priv.rows)}else{gl.uniform1i(programInfo.uniforms.hasTexture,0)}if(d.get(this).bumpTexture){gl.activeTexture(gl.TEXTURE1);gl.bindTexture(gl.TEXTURE_2D,d.get(this).bumpTexture);gl.uniform1i(programInfo.uniforms.bumpTexture,1);gl.uniform1i(programInfo.uniforms.hasBumpTexture,1)}else{gl.uniform1i(programInfo.uniforms.hasBumpTexture,0)}gl.uniform1i(programInfo.uniforms.numLights,sceneInfo.lights.length);if(sceneInfo.lights.length>0){const lightPositions=sceneInfo.lights.map(l=>[l.x,l.y,l.z,1]).reduce((a,b)=>a.concat(b),[]);const lightColors=sceneInfo.lights.map(l=>l.color.toArray()).reduce((a,b)=>a.concat(b),[]);const lightRanges=sceneInfo.lights.map(l=>l.range).reduce((a,b)=>a.concat(b),[]);gl.uniform4fv(programInfo.uniforms.lightPos,new Float32Array(lightPositions));gl.uniform4fv(programInfo.uniforms.lightColor,new Float32Array(lightColors));gl.uniform1fv(programInfo.uniforms.lightRange,new Float32Array(lightRanges))}}}});","shf3d/mesh.js":"\"use strict\";shRequire([__dirname+\"/entity.js\",__dirname+\"/util/util.js\",__dirname+\"/util/m4.js\"],(entity,util,m4)=>{const d=new WeakMap;exports.Mesh=class Mesh extends entity.Entity{constructor(){super();d.set(this,{info:null,clockWise:false,materials:[]});this.notifyable(\"clockWise\");this.schedule(gl=>{const priv=d.get(this);priv.info={buffer:{vertex:gl.createBuffer(),normal:gl.createBuffer(),tangent:gl.createBuffer(),texture:gl.createBuffer()},numVertices:0}})}get clockWise(){return d.get(this).clockWise}set clockWise(cw){d.get(this).clockWise=cw;this.clockWiseChanged()}buildMesh(vertices,normals,texAnchors,surfaces){const priv=d.get(this);const vertexArray=[];const texAnchorArray=[];const normalsArray=[];const tangentsArray=[];surfaces.slice().forEach(sfc=>{if(priv.clockWise){sfc=[sfc[0],sfc[2],sfc[1]]}const p1=vertices[sfc[0].vertex];const p2=vertices[sfc[1].vertex];const p3=vertices[sfc[2].vertex];let autoNormal=[0,0,0];if(sfc[0].normal===-1){autoNormal=util.surfaceNormal(p1,p2,p3)}let tangent=[0,0,0];if(sfc[0].texture!==-1){const uv1=texAnchors[sfc[0].texture];const uv2=texAnchors[sfc[1].texture];const uv3=texAnchors[sfc[2].texture];tangent=util.surfaceTangent(p1,p2,p3,uv1,uv2,uv3)}sfc.forEach(tuple=>{const vertex=vertices[tuple.vertex].slice(0,3);const normalVertex=tuple.normal!==-1?normals[tuple.normal].slice(0,3):autoNormal;const texAnchor=tuple.texture!==-1?texAnchors[tuple.texture].slice(0,2):[0,0];vertexArray.push(...vertex);normalsArray.push(...normalVertex);tangentsArray.push(...tangent);texAnchorArray.push(...texAnchor)})});this.schedule(gl=>{priv.info.numVertices=vertexArray.length/3;gl.bindBuffer(gl.ARRAY_BUFFER,priv.info.buffer.vertex);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertexArray),gl.STATIC_DRAW);gl.bindBuffer(gl.ARRAY_BUFFER,priv.info.buffer.normal);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(normalsArray),gl.STATIC_DRAW);gl.bindBuffer(gl.ARRAY_BUFFER,priv.info.buffer.tangent);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(tangentsArray),gl.STATIC_DRAW);gl.bindBuffer(gl.ARRAY_BUFFER,priv.info.buffer.texture);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(texAnchorArray),gl.STATIC_DRAW)})}assignMaterial(material,from,to){d.get(this).materials.push({material,from,to})}renderScene(gl,om,sceneInfo){const priv=d.get(this);this.prepare(gl);if(!priv.info||priv.info.numVertices===0){return}priv.materials.forEach(range=>{if(range.material){range.material.bind(gl,m4.multiply(om,this.matrix),sceneInfo,priv.info);gl.drawArrays(gl.TRIANGLES,range.from*3,(range.to-range.from+1)*3)}})}}});","shf3d/model3d.js":"\"use strict\";shRequire([__dirname+\"/mesh.js\",__dirname+\"/material.js\",__dirname+\"/util/objparser.js\"],(mesh,solidMtl,objParser)=>{const d=new WeakMap;exports.Model3D=class Model3D extends mesh.Mesh{constructor(){super();d.set(this,{status:\"empty\",autoNormals:false,source:\"\",materials:{}});this.notifyable(\"autoNormals\");this.notifyable(\"source\");this.notifyable(\"status\")}get status(){return d.get(this).status}get autoNormals(){return d.get(this).autoNormals}set autoNormals(n){d.get(this).autoNormals=n;this.autoNormalsChanged()}get source(){return d.get(this).source}set source(s){d.get(this).source=s;this.sourceChanged();if(s===\"\"){return}console.log(\"Loading model: \"+s);d.get(this).status=\"loading\";this.statusChanged();fetch(shRequire.resource(d.get(this).source)).then(response=>response.text()).then(data=>{if(s.toLowerCase().endsWith(\".obj\")){this.load(\"obj\",data,s);d.get(this).status=\"success\";this.statusChanged()}else{console.error(\"Unsupported object format: \"+s);d.get(this).status=\"error\";this.statusChanged()}}).catch(err=>{console.error(`Failed to load model '${s}': ${err}`)})}load(type,data,url){const priv=d.get(this);const dirname=url.substr(0,url.lastIndexOf(\"/\"));if(type===\"obj\"){console.log(\"Building mesh from model.\");const obj=objParser.parseObj(data);obj.material.ranges.filter(r=>r.to!==-1).forEach(r=>{if(!priv.materials[r.name]){const mtl=new solidMtl.Material;mtl.parent=this;mtl.color=mtl.rgb(1,1,1);mtl.shininess=1;mtl.init();mtl.connect(\"invalidate\",this,()=>{this.invalidate()});priv.materials[r.name]=mtl}this.assignMaterial(priv.materials[r.name],r.from,r.to)});obj.material.libraries.forEach(path=>{const mtlUrl=dirname+\"/\"+path.replace(/\\\\/g,\"/\");fetch(shRequire.resource(mtlUrl)).then(response=>response.text()).then(data=>this.load(\"mtl\",data,mtlUrl)).catch(err=>{console.error(`Failed to load material library '${mtlUrl}': ${err}`)})});const surfaces=obj.surfaces.map(s=>{return s.map(vertex=>{return{vertex:vertex.v,normal:priv.autoNormals?-1:vertex.vn,texture:vertex.vt}})});this.buildMesh(obj.v,obj.vn,obj.vt,surfaces);this.invalidate()}else if(type===\"mtl\"){const mtl=objParser.parseMtl(data);mtl.materials.forEach(entry=>{const mtl=priv.materials[entry.name];if(mtl){console.log(\"set material color on \"+entry.name);mtl.color=entry.kd;mtl.shininess=entry.ns;mtl.opacity=entry.d;if(entry.kdMap!==\"\"){mtl.source=dirname+\"/\"+entry.kdMap.replace(/\\\\/g,\"/\")}if(entry.bumpMap!==\"\"){mtl.bumpSource=dirname+\"/\"+entry.bumpMap.replace(/\\\\/g,\"/\")}}});this.invalidate()}}}});","shf3d/sphere.js":"\"use strict\";shRequire([__dirname+\"/mesh.js\",__dirname+\"/util/util.js\"],(mesh,util)=>{function location(longitude,latitude){return[Math.sin(Math.PI/180*latitude)*Math.cos(Math.PI/180*longitude),Math.sin(Math.PI/180*longitude),Math.cos(Math.PI/180*latitude)*Math.cos(Math.PI/180*longitude)]}function texLocation(longitude,latitude){return[latitude/360,1-Math.sin(Math.PI/180*((longitude+90)/2))]}function makeSphere(){const vertices=[];const texAnchors=[];const surfaces=[];let offset=0;const stepSize=12;for(let longitude=-90;longitude<90;longitude+=stepSize){for(let latitude=0;latitude<360;latitude+=stepSize){const vs=[location(longitude,latitude),location(longitude+stepSize,latitude),location(longitude+stepSize,latitude+stepSize),location(longitude,latitude+stepSize)];const ts=[texLocation(longitude,latitude),texLocation(longitude+stepSize,latitude),texLocation(longitude+stepSize,latitude+stepSize),texLocation(longitude,latitude+stepSize)];const rectSurfaces=util.rectSurfaces([offset+0,offset+1,offset+2,offset+3],[],[offset+0,offset+1,offset+2,offset+3]);vertices.push(...vs);texAnchors.push(...ts);surfaces.push(...rectSurfaces);offset+=4}}return{vertices,texAnchors,surfaces}}const d=new WeakMap;exports.Sphere=class Sphere extends mesh.Mesh{constructor(){super();d.set(this,{info:null,material:null});this.notifyable(\"material\");this.onMaterialChanged=()=>{this.invalidate()};const sphere=makeSphere();this.buildMesh(sphere.vertices,[],sphere.texAnchors,sphere.surfaces)}get material(){return d.get(this).material}set material(m){if(d.get(this).material){d.get(this).material.disconnect(\"invalidate\",this)}d.get(this).material=m;if(!m.parent){m.parent=this}this.assignMaterial(m,0,899);m.connect(\"invalidate\",this,()=>{this.invalidate()});this.materialChanged()}}});","shf3d/subview.js":"\"use strict\";shRequire([\"shellfish/low\",\"shellfish/mid\",__dirname+\"/util/color.js\",__dirname+\"/util/m4.js\"],(low,mid,colUtil,m4)=>{const d=new WeakMap;exports.SubView=class SubView extends mid.Object{constructor(){super();d.set(this,{ambience:colUtil.rgb(0,0,0),color:colUtil.rgb(0,0,0),camera:null,scene:null,x:0,y:0,width:100,height:100});this.notifyable(\"ambience\");this.notifyable(\"camera\");this.notifyable(\"color\");this.notifyable(\"height\");this.notifyable(\"scene\");this.notifyable(\"width\");this.notifyable(\"x\");this.notifyable(\"y\");this.transitionable(\"ambience\",colUtil.colorInterpolate);this.transitionable(\"color\",colUtil.colorInterpolate);this.registerEvent(\"invalidateScene\");const priv=d.get(this);this.onInitialization=()=>{if(priv.scene){priv.scene.init();this.invalidateScene()}}}get ambience(){return d.get(this).ambience}set ambience(a){d.get(this).ambience=a;this.ambienceChanged();this.invalidateScene()}get camera(){return d.get(this).camera}set camera(c){if(d.get(this).camera){d.get(this).camera.disconnect(\"matrixChanged\",this)}d.get(this).camera=c;if(c&&!c.parent){c.parent=this}this.cameraChanged();this.invalidateScene()}get color(){return d.get(this).color}set color(c){d.get(this).color=c;this.colorChanged();this.invalidateScene()}get scene(){return d.get(this).scene}set scene(s){if(d.get(this).scene){d.get(this).scene.disconnect(\"invalidate\",this)}d.get(this).scene=s;if(!s.parent){s.parent=this}this.sceneChanged();s.connect(\"invalidate\",this,()=>{this.invalidateScene()})}get x(){return d.get(this).x}set x(v){d.get(this).x=v;this.xChanged();this.invalidateScene()}get y(){return d.get(this).y}set y(v){d.get(this).y=v;this.yChanged();this.invalidateScene()}get width(){return d.get(this).width}set width(v){d.get(this).width=v;this.widthChanged();this.invalidateScene()}get height(){return d.get(this).height}set height(v){d.get(this).height=v;this.heightChanged();this.invalidateScene()}rgba(r,g,b,a){return colUtil.rgba(r,g,b,a)}rgb(r,g,b){return colUtil.rgb(r,g,b)}colorName(name){return colUtil.color(name)}renderScene(gl){const priv=d.get(this);if(!priv.scene||!priv.camera||!this.parent){return}const pbbox=this.parent.bbox;const xScale=this.parent.originalWidth/pbbox.width;const yScale=this.parent.originalHeight/pbbox.height;const x=priv.x*xScale;const y=priv.y*yScale;const w=priv.width*xScale;const h=priv.height*yScale;gl.enable(gl.SCISSOR_TEST);gl.scissor(x,this.parent.originalHeight-(y+h),w,h);gl.clearColor(priv.color.r,priv.color.g,priv.color.b,priv.color.a);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.disable(gl.SCISSOR_TEST);gl.viewport(x,this.parent.originalHeight-(y+h),w,h);if(priv.scene&&priv.scene.visible){const sceneInfo={activeCamera:priv.camera,viewMatrix:m4.identity(),ambience:priv.ambience,lights:[],colliders:[]};priv.scene.prepareScene(m4.scaling(1,1,1),sceneInfo);priv.scene.renderScene(gl,m4.scaling(1,1,1),sceneInfo)}}}});","shf3d/util/color.js":"\"use strict\";const COLORS={\"aliceblue\":[240,248,255,1],\"antiquewhite\":[250,235,215,1],\"aqua\":[0,255,255,1],\"aquamarine\":[127,255,212,1],\"azure\":[240,255,255,1],\"beige\":[245,245,220,1],\"bisque\":[255,228,196,1],\"black\":[0,0,0,1],\"blanchedalmond\":[255,235,205,1],\"blue\":[0,0,255,1],\"blueviolet\":[138,43,226,1],\"brown\":[165,42,42,1],\"burlywood\":[222,184,135,1],\"cadetblue\":[95,158,160,1],\"chartreuse\":[127,255,0,1],\"chocolate\":[210,105,30,1],\"coral\":[255,127,80,1],\"cornflowerblue\":[100,149,237,1],\"cornsilk\":[255,248,220,1],\"crimson\":[220,20,60,1],\"cyan\":[0,255,255,1],\"darkblue\":[0,0,139,1],\"darkcyan\":[0,139,139,1],\"darkgoldenrod\":[184,134,11,1],\"darkgray\":[169,169,169,1],\"darkgreen\":[0,100,0,1],\"darkgrey\":[169,169,169,1],\"darkkhaki\":[189,183,107,1],\"darkmagenta\":[139,0,139,1],\"darkolivegreen\":[85,107,47,1],\"darkorange\":[255,140,0,1],\"darkorchid\":[153,50,204,1],\"darkred\":[139,0,0,1],\"darksalmon\":[233,150,122,1],\"darkseagreen\":[143,188,143,1],\"darkslateblue\":[72,61,139,1],\"darkslategray\":[47,79,79,1],\"darkslategrey\":[47,79,79,1],\"darkturquoise\":[0,206,209,1],\"darkviolet\":[148,0,211,1],\"deeppink\":[255,20,147,1],\"deepskyblue\":[0,191,255,1],\"dimgray\":[105,105,105,1],\"dimgrey\":[105,105,105,1],\"dodgerblue\":[30,144,255,1],\"firebrick\":[178,34,34,1],\"floralwhite\":[255,250,240,1],\"forestgreen\":[34,139,34,1],\"fuchsia\":[255,0,255,1],\"gainsboro\":[220,220,220,1],\"ghostwhite\":[248,248,255,1],\"gold\":[255,215,0,1],\"goldenrod\":[218,165,32,1],\"gray\":[128,128,128,1],\"green\":[0,128,0,1],\"greenyellow\":[173,255,47,1],\"grey\":[128,128,128,1],\"honeydew\":[240,255,240,1],\"hotpink\":[255,105,180,1],\"indianred\":[205,92,92,1],\"indigo\":[75,0,130,1],\"ivory\":[255,255,240,1],\"khaki\":[240,230,140,1],\"lavender\":[230,230,250,1],\"lavenderblush\":[255,240,245,1],\"lawngreen\":[124,252,0,1],\"lemonchiffon\":[255,250,205,1],\"lightblue\":[173,216,230,1],\"lightcoral\":[240,128,128,1],\"lightcyan\":[224,255,255,1],\"lightgoldenrodyellow\":[250,250,210,1],\"lightgray\":[211,211,211,1],\"lightgreen\":[144,238,144,1],\"lightgrey\":[211,211,211,1],\"lightpink\":[255,182,193,1],\"lightsalmon\":[255,160,122,1],\"lightseagreen\":[32,178,170,1],\"lightskyblue\":[135,206,250,1],\"lightslategray\":[119,136,153,1],\"lightslategrey\":[119,136,153,1],\"lightsteelblue\":[176,196,222,1],\"lightyellow\":[255,255,224,1],\"lime\":[0,255,0,1],\"limegreen\":[50,205,50,1],\"linen\":[250,240,230,1],\"magenta\":[255,0,255,1],\"maroon\":[128,0,0,1],\"mediumaquamarine\":[102,205,170,1],\"mediumblue\":[0,0,205,1],\"mediumorchid\":[186,85,211,1],\"mediumpurple\":[147,112,219,1],\"mediumseagreen\":[60,179,113,1],\"mediumslateblue\":[123,104,238,1],\"mediumspringgreen\":[0,250,154,1],\"mediumturquoise\":[72,209,204,1],\"mediumvioletred\":[199,21,133,1],\"midnightblue\":[25,25,112,1],\"mintcream\":[245,255,250,1],\"mistyrose\":[255,228,225,1],\"moccasin\":[255,228,181,1],\"navajowhite\":[255,222,173,1],\"navy\":[0,0,128,1],\"oldlace\":[253,245,230,1],\"olive\":[128,128,0,1],\"olivedrab\":[107,142,35,1],\"orange\":[255,165,0,1],\"orangered\":[255,69,0,1],\"orchid\":[218,112,214,1],\"palegoldenrod\":[238,232,170,1],\"palegreen\":[152,251,152,1],\"paleturquoise\":[175,238,238,1],\"palevioletred\":[219,112,147,1],\"papayawhip\":[255,239,213,1],\"peachpuff\":[255,218,185,1],\"peru\":[205,133,63,1],\"pink\":[255,192,203,1],\"plum\":[221,160,221,1],\"powderblue\":[176,224,230,1],\"purple\":[128,0,128,1],\"red\":[255,0,0,1],\"rosybrown\":[188,143,143,1],\"royalblue\":[65,105,225,1],\"saddlebrown\":[139,69,19,1],\"salmon\":[250,128,114,1],\"sandybrown\":[244,164,96,1],\"seagreen\":[46,139,87,1],\"seashell\":[255,245,238,1],\"sienna\":[160,82,45,1],\"silver\":[192,192,192,1],\"skyblue\":[135,206,235,1],\"slateblue\":[106,90,205,1],\"slategray\":[112,128,144,1],\"slategrey\":[112,128,144,1],\"snow\":[255,250,250,1],\"springgreen\":[0,255,127,1],\"steelblue\":[70,130,180,1],\"tan\":[210,180,140,1],\"teal\":[0,128,128,1],\"thistle\":[216,191,216,1],\"tomato\":[255,99,71,1],\"transparent\":[0,0,0,0],\"turquoise\":[64,224,208,1],\"violet\":[238,130,238,1],\"wheat\":[245,222,179,1],\"white\":[255,255,255,1],\"whitesmoke\":[245,245,245,1],\"yellow\":[255,255,0,1],\"yellowgreen\":[154,205,50,1],\"rebeccapurple\":[102,51,153,1]};exports.rgba=function(r,g,b,a){return{r,g,b,a,toArray:()=>[r,g,b,a]}};exports.rgb=function(r,g,b){return exports.rgba(r,g,b,1)};exports.color=function(name){const col=COLORS[name.toLowerCase()]||[0,0,0,1];return exports.rgba(col[0]/255,col[1]/255,col[2]/255,col[3])};exports.colorInterpolate=function(c1,c2,x){return exports.rgba(c1.r+(c2.r-c1.r)*x,c1.g+(c2.g-c1.g)*x,c1.b+(c2.b-c1.b)*x,c1.a+(c2.a-c1.a)*x)};","shf3d/util/m4.js":"\"use strict\";const DEG_TO_RAD=Math.PI/180;exports.identity=function(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]};exports.transpose=function(m){const t=exports.identity();for(let row=0;row<4;++row){for(let col=0;col<4;++col){t[row*4+col]=m[col*4+row]}}return t};exports.multiply=function(m1,m2){const res=exports.identity();const m1Rows=4;const m2Cols=4;for(let row=0;row<m1Rows;++row){for(let col=0;col<m2Cols;++col){res[row*4+col]=0;for(let i=0;i<4;++i){res[row*4+col]+=m1[row*4+i]*m2[i*4+col]}}}return res};exports.multiplyVector=function(m1,m2){const res=[0,0,0,0];const m1Rows=4;const m2Cols=1;for(let row=0;row<m1Rows;++row){for(let col=0;col<m2Cols;++col){res[row*1+col]=0;for(let i=0;i<4;++i){res[row*1+col]+=m1[row*4+i]*m2[i*m2Cols+col]}}}return res};exports.translation=function(tx,ty,tz){return[1,0,0,tx,0,1,0,ty,0,0,1,tz,0,0,0,1]};exports.xRotation=function(angle){const rad=angle*DEG_TO_RAD;const c=Math.cos(rad);const s=Math.sin(rad);return[1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1]};exports.yRotation=function(angle){const rad=angle*DEG_TO_RAD;const c=Math.cos(rad);const s=Math.sin(rad);return[c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1]};exports.zRotation=function(angle){const rad=angle*DEG_TO_RAD;const c=Math.cos(rad);const s=Math.sin(rad);return[c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1]};exports.rotation=function(rx,ry,rz){return exports.multiply(exports.multiply(exports.xRotation(rx),exports.yRotation(ry)),exports.zRotation(rz))};exports.rotationByQuaternion=function(q){const qw=q[0];const qx=q[1];const qy=q[2];const qz=q[3];const qx2=qx*qx;const qy2=qy*qy;const qz2=qz*qz;return[1-2*qy2-2*qz2,2*qx*qy-2*qz*qw,2*qx*qz+2*qy*qw,0,2*qx*qy+2*qz*qw,1-2*qx2-2*qz2,2*qy*qz-2*qx*qw,0,2*qx*qz-2*qy*qw,2*qy*qz+2*qx*qw,1-2*qx2-2*qy2,0,0,0,0,1]};exports.scaling=function(sx,sy,sz){return[sx,0,0,0,0,sy,0,0,0,0,sz,0,0,0,0,1]};exports.inverse=function(m){const mdet=exports.identity();mdet[0]=m[5]*m[10]*m[15]-m[5]*m[11]*m[14]-m[9]*m[6]*m[15]+m[9]*m[7]*m[14]+m[13]*m[6]*m[11]-m[13]*m[7]*m[10];mdet[4]=-m[4]*m[10]*m[15]+m[4]*m[11]*m[14]+m[8]*m[6]*m[15]-m[8]*m[7]*m[14]-m[12]*m[6]*m[11]+m[12]*m[7]*m[10];mdet[8]=m[4]*m[9]*m[15]-m[4]*m[11]*m[13]-m[8]*m[5]*m[15]+m[8]*m[7]*m[13]+m[12]*m[5]*m[11]-m[12]*m[7]*m[9];mdet[12]=-m[4]*m[9]*m[14]+m[4]*m[10]*m[13]+m[8]*m[5]*m[14]-m[8]*m[6]*m[13]-m[12]*m[5]*m[10]+m[12]*m[6]*m[9];mdet[1]=-m[1]*m[10]*m[15]+m[1]*m[11]*m[14]+m[9]*m[2]*m[15]-m[9]*m[3]*m[14]-m[13]*m[2]*m[11]+m[13]*m[3]*m[10];mdet[5]=m[0]*m[10]*m[15]-m[0]*m[11]*m[14]-m[8]*m[2]*m[15]+m[8]*m[3]*m[14]+m[12]*m[2]*m[11]-m[12]*m[3]*m[10];mdet[9]=-m[0]*m[9]*m[15]+m[0]*m[11]*m[13]+m[8]*m[1]*m[15]-m[8]*m[3]*m[13]-m[12]*m[1]*m[11]+m[12]*m[3]*m[9];mdet[13]=m[0]*m[9]*m[14]-m[0]*m[10]*m[13]-m[8]*m[1]*m[14]+m[8]*m[2]*m[13]+m[12]*m[1]*m[10]-m[12]*m[2]*m[9];mdet[2]=m[1]*m[6]*m[15]-m[1]*m[7]*m[14]-m[5]*m[2]*m[15]+m[5]*m[3]*m[14]+m[13]*m[2]*m[7]-m[13]*m[3]*m[6];mdet[6]=-m[0]*m[6]*m[15]+m[0]*m[7]*m[14]+m[4]*m[2]*m[15]-m[4]*m[3]*m[14]-m[12]*m[2]*m[7]+m[12]*m[3]*m[6];mdet[10]=m[0]*m[5]*m[15]-m[0]*m[7]*m[13]-m[4]*m[1]*m[15]+m[4]*m[3]*m[13]+m[12]*m[1]*m[7]-m[12]*m[3]*m[5];mdet[14]=-m[0]*m[5]*m[14]+m[0]*m[6]*m[13]+m[4]*m[1]*m[14]-m[4]*m[2]*m[13]-m[12]*m[1]*m[6]+m[12]*m[2]*m[5];mdet[3]=-m[1]*m[6]*m[11]+m[1]*m[7]*m[10]+m[5]*m[2]*m[11]-m[5]*m[3]*m[10]-m[9]*m[2]*m[7]+m[9]*m[3]*m[6];mdet[7]=m[0]*m[6]*m[11]-m[0]*m[7]*m[10]-m[4]*m[2]*m[11]+m[4]*m[3]*m[10]+m[8]*m[2]*m[7]-m[8]*m[3]*m[6];mdet[11]=-m[0]*m[5]*m[11]+m[0]*m[7]*m[9]+m[4]*m[1]*m[11]-m[4]*m[3]*m[9]-m[8]*m[1]*m[7]+m[8]*m[3]*m[5];mdet[15]=m[0]*m[5]*m[10]-m[0]*m[6]*m[9]-m[4]*m[1]*m[10]+m[4]*m[2]*m[9]+m[8]*m[1]*m[6]-m[8]*m[2]*m[5];const det=m[0]*mdet[0]+m[1]*mdet[4]+m[2]*mdet[8]+m[3]*mdet[12];if(det===0){return exports.identity()}else{const inverse=exports.identity();const invDet=1/det;for(let i=0;i<16;i++){inverse[i]=mdet[i]*invDet}return inverse}};exports.orthographic=function(left,right,bottom,top,near,far){return[2/(right-left),0,0,(left+right)/(left-right),0,2/(top-bottom),0,(bottom+top)/(bottom-top),0,0,2/(near-far),(near+far)/(near-far),0,0,0,1]};exports.frustum=function(l,r,b,t,n,f){const q=f/(f-n);return[n/(r-l),0,0,0,0,n/(t-b),0,0,0,0,q*(n-1),-n*q,0,0,-1,0]};exports.perspective=function(fov,aspect,near,far){const y=Math.tan(fov/180*Math.PI/2)*near;const x=y*aspect;return exports.frustum(-x,x,-y,y,near,far)};","shf3d/util/objparser.js":"\"use strict\";const TOKEN_NUMBER=/^-?[0-9]+(\\.[0-9]+)?([eE]-?[0-9]+)?/;const TOKEN_NAME=/^[^ \\r\\n]+/;const TOKEN_NAME_WITH_SPACES=/^[^\\r\\n]+/;function lineOfPos(data,pos){const lines=data.split(\"\\n\");let sum=0;for(let line=0;line<lines.length;++line){sum+=lines[line].length+1;if(sum>pos.value){return line+1}}return-1}function skipWhitespace(data,pos,skipNewline,skipComments){function skip(data,pos,what){while(pos.value<data.length&&what.indexOf(data[pos.value])!==-1){++pos.value}}while(pos.value<data.length){skip(data,pos,skipNewline?\"\\t\\n\\r\\x0B \":\"\\t\\r\\x0B \");if(skipComments){if(next(data,pos,\"//\")){readUntilNewline(data,pos)}else if(next(data,pos,\"/*\")){skipCommentBlock(data,pos)}else{break}}else{break}}}function skipCommentBlock(data,pos){let idx=data.indexOf(\"*/\",pos.value);if(idx!==-1){pos.value=idx+2}else{throw\"Syntax error in line \"+lineOfPos(data,pos)+\": end of comment block expected.\"}}function next(data,pos,what){return data.substr(pos.value,what.length)===what}function nextIsUpperCase(data,pos){let c=data[pos.value];return c>=\"A\"&&c<=\"Z\"}function nextIsToken(data,pos,regExp){if(pos.value<data.length){return regExp.test(data.substr(pos.value))}else{return false}}function expect(data,pos,what){if(data.substr(pos.value,what.length)===what){pos.value+=what.length;return what}else{console.log(data.substr(pos.value,80));throw\"Syntax error in line \"+lineOfPos(data,pos)+\": '\"+what+\"' expected.\"}}function readUntil(data,pos,chars){let s=\"\";while(pos.value<data.length&&chars.indexOf(data[pos.value])===-1){s+=data[pos.value];++pos.value}return s}function readUntilNewline(data,pos){let s=readUntil(data,pos,\"\\r\\n\");return s}function readToken(data,pos,regExp){let s=\"\";if(pos.value<data.length){let matches=regExp.exec(data.substr(pos.value));if(matches){let result=matches[0];pos.value+=result.length;return result}}return\"\"}function readString(data,pos){if(pos.value>=data.length){return\"\"}let delimiter=\"\";if(data[pos.value]===\"'\"){delimiter=\"'\";++pos.value}else if(data[pos.value]===\"\\\"\"){delimiter=\"\\\"\";++pos.value}let result=\"\";while(pos.value<data.length){if(delimiter!==\"\"&&data[pos.value]===delimiter){++pos.value;break}else if(delimiter===\"\"&&\"\\t\\n\\r\\x0B \".indexOf(data[pos.value])!==-1){break}else if(next(data,pos,\"\\\\n\")){result+=\"\\\\n\";++pos.value}else if(data[pos.value]===\"\\\\\"){}else{result+=data[pos.value]}++pos.value}return result}function parseEntry(data,pos,obj){if(next(data,pos,\"#\")){readUntilNewline(data,pos);return}const cmd=readToken(data,pos,/^[#a-z_]+/i);skipWhitespace(data,pos,false,true);switch(cmd){case\"f\":const f=parseFace(data,pos,obj.v.length,obj.vt.length,obj.vn.length);if(f.length>3){fs=splitFace(f);obj.surfaces.push(...fs)}else{obj.surfaces.push(f)}obj.material.ranges[obj.material.ranges.length-1].to=obj.surfaces.length-1;break;case\"g\":readUntilNewline(data,pos);break;case\"mtllib\":skipWhitespace(data,pos,false,true);libs=parseFilenames(data,pos);obj.material.libraries.push(...libs);break;case\"s\":readUntilNewline(data,pos);break;case\"usemtl\":skipWhitespace(data,pos,false,true);const mtlName=readToken(data,pos,TOKEN_NAME);obj.material.ranges.push({name:mtlName,from:obj.surfaces.length,to:-1});break;case\"v\":const v=parseVertex(data,pos);obj.v.push(v);break;case\"vn\":const vn=parseVertex(data,pos);obj.vn.push(vn);break;case\"vt\":const vt=parseVertex(data,pos);if(vt[0]<0)vt[0]=1+vt[0];if(vt[0]>1)vt[0]=2-vt[0];if(vt[1]<0)vt[1]=1+vt[1];if(vt[1]>1)vt[1]=2-vt[1];obj.vt.push(vt);break;default:readUntilNewline(data,pos);console.error(\"Unsupported entry in obj file: \"+cmd);}}function parseFilenames(data,pos){const filenames=[];while(pos.value<data.length){const name=readToken(data,pos,TOKEN_NAME_WITH_SPACES);filenames.push(name);skipWhitespace(data,pos,false,true);if(!nextIsToken(data,pos,TOKEN_NAME)){break}}return filenames}function parseVertex(data,pos){const v=[];v.push(Number.parseFloat(readToken(data,pos,TOKEN_NUMBER)));skipWhitespace(data,pos,false,true);v.push(Number.parseFloat(readToken(data,pos,TOKEN_NUMBER)));skipWhitespace(data,pos,false,true);if(nextIsToken(data,pos,TOKEN_NUMBER)){v.push(Number.parseFloat(readToken(data,pos,TOKEN_NUMBER)));skipWhitespace(data,pos,false,true)}else{v.push(0)}if(nextIsToken(data,pos,TOKEN_NUMBER)){v.push(Number.parseFloat(readToken(data,pos,TOKEN_NUMBER)))}else{v.push(1)}return v}function parseFace(data,pos,vAmount,vtAmount,vnAmount){const f=[];while(pos.value<data.length){f.push(parseFaceTuple(data,pos,vAmount,vtAmount,vnAmount));skipWhitespace(data,pos,false,true);if(!nextIsToken(data,pos,TOKEN_NUMBER)){break}}return f}function parseFaceTuple(data,pos,vAmount,vtAmount,vnAmount){const tuple={v:-1,vt:-1,vn:-1};tuple.v=Number.parseInt(readToken(data,pos,TOKEN_NUMBER))-1;if(tuple.v<0){tuple.v=vAmount+tuple.v+1}if(next(data,pos,\"/\")){expect(data,pos,\"/\");if(nextIsToken(data,pos,TOKEN_NUMBER)){tuple.vt=Number.parseInt(readToken(data,pos,TOKEN_NUMBER))-1;if(tuple.vt<0){tuple.vt=vtAmount+tuple.vt+1}}if(next(data,pos,\"/\")){expect(data,pos,\"/\");if(nextIsToken(data,pos,TOKEN_NUMBER)){tuple.vn=Number.parseInt(readToken(data,pos,TOKEN_NUMBER))-1;if(tuple.vn<0){tuple.vn=vnAmount+tuple.vn+1}}}}return tuple}function splitFace(f){const fs=[];const tuple1=f[0];for(let i=1;i<f.length;++i){const tuple2=f[i%f.length];const tuple3=f[(i+1)%f.length];fs.push([tuple1,tuple2,tuple3])}return fs}exports.parseObj=function(data){const obj={v:[],vt:[],vn:[],surfaces:[],material:{libraries:[],ranges:[{name:\"\",from:0,to:-1}]}};const pos={value:0};while(pos.value<data.length){parseEntry(data,pos,obj);skipWhitespace(data,pos,true,true)}return obj};function parseMtlColor(data,pos){if(nextIsToken(data,pos,TOKEN_NUMBER)){let r=Number.parseFloat(readToken(data,pos,TOKEN_NUMBER));let g=r;let b=r;skipWhitespace(data,pos,false,true);if(nextIsToken(data,pos,TOKEN_NUMBER)){g=Number.parseFloat(readToken(data,pos,TOKEN_NUMBER));skipWhitespace(data,pos,false,true);b=Number.parseFloat(readToken(data,pos,TOKEN_NUMBER))}return[r,g,b]}else{return[0,0,0]}}function parseMtlMap(data,pos){if(next(data,pos,\"-\")){readUntilNewline(data,pos);return\"\"}return readToken(data,pos,TOKEN_NAME_WITH_SPACES)}function parseMtlEntry(data,pos,mtl){const cmd=readToken(data,pos,/^[a-z_]+/i);skipWhitespace(data,pos,false,true);switch(cmd){case\"newmtl\":const mtlName=readToken(data,pos,TOKEN_NAME);mtl.materials.push({name:mtlName,ka:[0,0,0],kd:[1,1,1],ks:[0,0,0],ns:1,d:1,kdMap:\"\",bumpMap:\"\"});break;case\"d\":mtl.materials[mtl.materials.length-1].d=readToken(data,pos,TOKEN_NUMBER);break;case\"Ka\":mtl.materials[mtl.materials.length-1].ka=parseMtlColor(data,pos);break;case\"Kd\":mtl.materials[mtl.materials.length-1].kd=parseMtlColor(data,pos);break;case\"map_Kd\":mtl.materials[mtl.materials.length-1].kdMap=parseMtlMap(data,pos);console.log(\"parsed mapKd: \"+mtl.materials[mtl.materials.length-1].kdMap);break;case\"map_Bump\":mtl.materials[mtl.materials.length-1].bumpMap=parseMtlMap(data,pos);console.log(\"parsed bump map: \"+mtl.materials[mtl.materials.length-1].bumpMap);break;case\"Ks\":mtl.materials[mtl.materials.length-1].ks=parseMtlColor(data,pos);break;case\"Ns\":mtl.materials[mtl.materials.length-1].ns=Number.parseFloat(readToken(data,pos,TOKEN_NUMBER));break;default:readUntilNewline(data,pos);}}exports.parseMtl=function(data){const mtl={materials:[]};const pos={value:0};while(pos.value<data.length){parseMtlEntry(data,pos,mtl);skipWhitespace(data,pos,true,true)}return mtl};","shf3d/util/util.js":"\"use strict\";exports.PLUS=(a,b)=>a+b;exports.MINUS=(a,b)=>a-b;exports.surface=function(vs,ns,ts){const res=[];vs.forEach((nil,idx)=>{res.push({vertex:vs[idx],normal:ns[idx]!==undefined?ns[idx]:-1,texture:ts[idx]!==undefined?ts[idx]:-1})});return res};exports.rectSurfaces=function(vs,ns,ts){return[exports.surface([vs[3],vs[2],vs[0]],[ns[3]||-1,ns[2]||-1,ns[0]||-1],[ts[3],ts[2],ts[0]]),exports.surface([vs[0],vs[2],vs[1]],[ns[0]||-1,ns[2]||-1,ns[1]||-1],[ts[0],ts[2],ts[1]])]};exports.surfaceNormal=function(v1,v2,v3){const u=exports.elementWise(v2,v1,exports.MINUS);const v=exports.elementWise(v3,v1,exports.MINUS);const n=[u[1]*v[2]-u[2]*v[1],u[2]*v[0]-u[0]*v[2],u[0]*v[1]-u[1]*v[0]];const l=exports.vectorLength(n);return n.map(a=>a/l)};exports.interpolateVector=function(v1,v2){const delta=exports.elementWise(v1,v2,exports.MINUS);const deltaHalf=delta.map(d=>d/2);return exports.elementWise(v1,deltaHalf,exports.PLUS)};exports.vectorLength=function(v){return Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2])};exports.surfaceTangent=function(v1,v2,v3,uv1,uv2,uv3){const e1=exports.elementWise(v2,v1,exports.MINUS);const e2=exports.elementWise(v3,v1,exports.MINUS);const deltaUv1=exports.elementWise(uv2,uv1,exports.MINUS);const deltaUv2=exports.elementWise(uv3,uv1,exports.MINUS);let f=0;let t=deltaUv1[0]*deltaUv2[1]-deltaUv2[0]*deltaUv1[1];if(t!==0){f=1/(deltaUv1[0]*deltaUv2[1]-deltaUv2[0]*deltaUv1[1])}return[f*(deltaUv2[1]*e1[0]-deltaUv1[1]*e2[0]),f*(deltaUv2[1]*e1[1]-deltaUv1[1]*e2[1]),f*(deltaUv2[1]*e1[2]-deltaUv1[1]*e2[2])]};exports.elementWise=function(v1,v2,op){return v1.map((a,idx)=>op(a,v2[idx]))};","shf3d/view.js":"\"use strict\";shRequire([\"shellfish/low\",\"shellfish/mid\",__dirname+\"/util/color.js\",__dirname+\"/util/m4.js\"],(low,mid,colUtil,m4)=>{const d=new WeakMap;exports.View=class View extends mid.Canvas{constructor(){super();d.set(this,{renderPending:false,gl:this.get().getContext(\"webgl\"),ambience:colUtil.rgb(0,0,0),color:colUtil.rgb(0,0,0),camera:null,scene:null,vr:false,vrDisplay:null,vrFrameData:null});this.notifyable(\"ambience\");this.notifyable(\"camera\");this.notifyable(\"color\");this.notifyable(\"scene\");this.notifyable(\"vr\");this.transitionable(\"ambience\",colUtil.colorInterpolate);this.transitionable(\"color\",colUtil.colorInterpolate);const priv=d.get(this);const gl=priv.gl;gl.enable(gl.CULL_FACE);gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);gl.enable(gl.DEPTH_TEST);gl.depthFunc(gl.LEQUAL);this.onInitialization=()=>{if(priv.scene){priv.scene.init();this.invalidateScene()}};this.onOriginalWidthChanged=()=>{this.invalidateScene()};this.onOriginalHeightChanged=()=>{this.invalidateScene()}}get ambience(){return d.get(this).ambience}set ambience(a){d.get(this).ambience=a;this.ambienceChanged();this.invalidateScene()}get camera(){return d.get(this).camera}set camera(c){if(d.get(this).camera){d.get(this).camera.disconnect(\"matrixChanged\",this)}d.get(this).camera=c;if(c&&!c.parent){c.parent=this}this.cameraChanged();this.invalidateScene()}get color(){return d.get(this).color}set color(c){d.get(this).color=c;this.colorChanged();this.invalidateScene()}get scene(){return d.get(this).scene}set scene(s){if(d.get(this).scene){d.get(this).scene.disconnect(\"invalidate\",this)}d.get(this).scene=s;if(!s.parent){s.parent=this}this.sceneChanged();s.connect(\"invalidate\",this,()=>{this.invalidateScene()})}get vr(){return d.get(this).vr}set vr(value){const priv=d.get(this);priv.vr=value;if(value){if(navigator.getVRDisplays){navigator.getVRDisplays().then(displays=>{if(displays.length>0){priv.vrDisplay=displays[0];priv.vrDisplay.requestPresent({source:this.get()}).then(()=>{priv.vrFrameData=new VRFrameData;this.invalidateScene()})}else{console.warn(\"No VR displays connected.\")}})}else{console.warn(\"VR is not available.\")}}else{if(priv.vrDisplay){priv.vrDisplay.exitPresent();priv.vrDisplay=null;priv.vrFrameData=null;this.invalidateScene()}}this.vrChanged()}rgba(r,g,b,a){return colUtil.rgba(r,g,b,a)}rgb(r,g,b){return colUtil.rgb(r,g,b)}colorName(name){return colUtil.color(name)}invalidateScene(){const priv=d.get(this);if(!priv.renderPending){priv.renderPending=true;const renderFrame=()=>{this.renderScene();priv.renderPending=false;if(priv.vrDisplay){priv.vrDisplay.requestAnimationFrame(renderFrame)}};if(priv.xrSession){priv.vrDisplay.requestAnimationFrame(renderFrame)}else{window.requestAnimationFrame(renderFrame)}}}renderScene(){const priv=d.get(this);if(!priv.scene){return}const gl=priv.gl;gl.clearColor(priv.color.r,priv.color.g,priv.color.b,priv.color.a);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);if(priv.scene&&priv.scene.visible){if(priv.vrDisplay){priv.vrDisplay.getFrameData(priv.vrFrameData)}const sceneInfo={activeCamera:priv.camera,vrFrameData:priv.vrFrameData,viewMatrixL:m4.identity(),viewMatrixR:m4.identity(),viewMatrix:m4.identity(),cameraLocation:[0,0,0],ambience:priv.ambience,lights:[],colliders:[]};priv.scene.prepareScene(m4.scaling(1,1,1),sceneInfo);sceneInfo.colliders.forEach(entry=>{const objs=priv.scene.collisionsWith(entry.vertex);entry.target.collide(objs)});if(priv.vr){gl.viewport(0,0,this.originalWidth/2,this.originalHeight);sceneInfo.viewMatrix=sceneInfo.viewMatrixL;priv.scene.renderScene(gl,m4.scaling(1,1,1),sceneInfo);gl.viewport(this.originalWidth/2,0,this.originalWidth/2,this.originalHeight);sceneInfo.viewMatrix=sceneInfo.viewMatrixR;priv.scene.renderScene(gl,m4.scaling(1,1,1),sceneInfo)}else{gl.viewport(0,0,this.originalWidth,this.originalHeight);sceneInfo.viewMatrix=sceneInfo.viewMatrixL;priv.scene.renderScene(gl,m4.scaling(1,1,1),sceneInfo)}if(priv.vrDisplay){priv.vrDisplay.submitFrame()}}this.children.filter(c=>c!==priv.scene&&c.renderScene).forEach(obj=>{obj.renderScene(gl)})}add(child){if(child.invalidateScene){child.connect(\"invalidateScene\",this,()=>{this.invalidateScene()})}child.parent=this}}});","shf3d.js":"\"use strict\";exports.__id=\"shellfish/3d\";const mods=[\"camera\",\"clone\",\"collider\",\"cube\",\"entity\",\"group\",\"heightmesh\",\"light\",\"material\",\"mesh\",\"model3d\",\"sphere\",\"subview\",\"view\"];shRequire(mods.map(m=>__dirname+\"/shf3d/\"+m+\".js\"),function(){for(var i=0;i<arguments.length;++i){exports.include(arguments[i])}});"},"aliases":{"shellfish/3d":"shf3d.js"},"formats":{"shf3d/camera.js":"utf-8","shf3d/clone.js":"utf-8","shf3d/collider.js":"utf-8","shf3d/cube.js":"utf-8","shf3d/entity.js":"utf-8","shf3d/group.js":"utf-8","shf3d/heightmesh.js":"utf-8","shf3d/light.js":"utf-8","shf3d/material.js":"utf-8","shf3d/mesh.js":"utf-8","shf3d/model3d.js":"utf-8","shf3d/sphere.js":"utf-8","shf3d/subview.js":"utf-8","shf3d/util/color.js":"utf-8","shf3d/util/m4.js":"utf-8","shf3d/util/objparser.js":"utf-8","shf3d/util/util.js":"utf-8","shf3d/view.js":"utf-8","shf3d.js":"utf-8"}}