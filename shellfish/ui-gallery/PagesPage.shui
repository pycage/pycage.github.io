/*******************************************************************************
This file is part of the Shellfish UI toolkit examples.
Copyright (c) 2020 - 2021 Martin Grimme <martin.grimme@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*******************************************************************************/

require "shellfish/ui";
require "./Header.shui";

Page {
    id: page

    property simplePageT: template Page {
        id: page

        into header Header {
            id: header
            
            title: "Example Page"
            subtitle: "A simple page"
        }

        Box {
            fillWidth: true
            marginTop: header.height + theme.paddingSmall
            marginLeft: theme.paddingLarge
            marginRight: theme.paddingLarge
            
            Label {
                overflowBehavior: "wrap"
                text: "This is a simple page with a header bar. " +
                      "Pushing the back button ([icon:ui-arrow_left]) closes " +
                      "this page and takes the user back to the previous page."
            }
        }
    }

    property imagePageT: template Page {
        id: page

        into header Header {
            id: header
            
            title: "A Scrollable Page"
            subtitle: "Click or tap on screen to hide header."
        }

        Label {
            visible: image.status === "loading"
            position: "free"
            width: documentRoot.windowWidth
            height: documentRoot.windowHeight
            horizontalAlignment: "center"
            verticalAlignment: "center"
            fontSize: theme.fontSizeLarge
            text: "[icon:spinner5]"
        }

        MouseBox {
            onClick: { header.active = ! header.active; }

            Image {
                id: image
                source: __dirname + "/sample.jpg"
            }
        }
    }

    property customPageT: template Page {
        id: page

        marginTop: (1 - openingPercentage) * height
        marginLeft: (1 - openingPercentage) * width

        into header Header {
            id: header
            
            marginTop: page.marginTop
            title: "Example Page"
        }

        Box {
            fillWidth: true
            marginTop: header.height + theme.paddingSmall
            marginLeft: theme.paddingLarge
            marginRight: theme.paddingLarge
            
            Label {
                overflowBehavior: "wrap"
                text: "This page has a custom opening animation." +
                      "\n\n" +
                      "By attaching to the property **openingPercentage**, you can " +
                      "implement any opening animation you like."
            }
        }
    }

    property customPage2T: template Page {
        id: page

        marginLeft: 0
        opacity: openingPercentage * 1.0

        into header Header {
            id: header
            
            title: "Example Page"
        }

        Box {
            fillWidth: true
            marginTop: header.height + theme.paddingSmall
            marginLeft: theme.paddingLarge
            marginRight: theme.paddingLarge
            
            Label {
                overflowBehavior: "wrap"
                text: "This page has a custom opening animation." +
                      "\n\n" +
                      "By attaching to the property **openingPercentage**, you can " +
                      "implement any opening animation you like."
            }
        }
    }

    property customPage3T: template Page {
        id: page

        rotationAxis: vec3(1, 0, 0)
        rotationAngle: (1 - openingPercentage) * 90

        into header Header {
            id: header

            marginLeft: page.marginLeft    
            rotationAxis: page.rotationAxis
            rotationAngle: page.rotationAngle
            title: "Example Page"
        }

        Box {
            fillWidth: true
            marginTop: header.height + theme.paddingSmall
            marginLeft: theme.paddingLarge
            marginRight: theme.paddingLarge
            
            Label {
                overflowBehavior: "wrap"
                text: "This page has a custom opening animation." +
                      "\n\n" +
                      "By attaching to the property **openingPercentage**, you can " +
                      "implement any opening animation you like."
            }
        }
    }

    property customPage4T: template Page {
        id: page

        openingPercentageTransition: null

        into header Header {
            id: header

            title: "Example Page"
        }

        Box {
            fillWidth: true
            marginTop: header.height + theme.paddingSmall
            marginLeft: theme.paddingLarge
            marginRight: theme.paddingLarge
            
            Label {
                overflowBehavior: "wrap"
                text: "This page has no opening animation." +
                      "\n\n" +
                      "By setting the property **openingPercentageTransition** to **null**, " +
                      "you can disable the opening animation completely."
            }
        }
    }

    into header Header {
        id: pageHeader
        
        title: "Pages"
        codeUrls: [__filename, "Header.shui"]
    }

    Box {
        marginLeft: theme.paddingLarge
        marginRight: theme.paddingLarge
        marginTop: pageHeader.height + theme.paddingSmall

        Label {
            fillWidth: true
            overflowBehavior: "wrap"
            text: "Pages on a PageStack are the prefered way of structuring " +
                  "mobile applications hierarchically." +
                  "\n\n" +
                  "You can push new Pages on top of the PageStack, or pop off " +
                  "the topmost Page."
        }

        Button {
            marginTop: theme.paddingMedium
            text: "Push Page"
            onClick: {
                page.pageStack.pushPage(page.simplePageT);
            }
        }

        Label {
            marginTop: theme.paddingLarge
            text: "This is a page with scrollable content."
        }

        Button {
            marginTop: theme.paddingMedium
            text: "Push Page"
            onClick: {
                page.pageStack.pushPage(page.imagePageT);
            }
        }

        Label {
            marginTop: theme.paddingLarge
            text: "These are pages with custom opening animations."
        }

        Box {
            layout: "row"
            overflowBehavior: "wrap"
            fillWidth: true
            marginTop: theme.paddingSmall

            Button {
                marginTop: theme.paddingSmall
                marginRight: theme.paddingSmall
                text: "Push Page"
                onClick: {
                    page.pageStack.pushPage(page.customPageT);
                }
            }

            Button {
                marginTop: theme.paddingSmall
                marginRight: theme.paddingSmall
                text: "Push Page"
                onClick: {
                    page.pageStack.pushPage(page.customPage2T);
                }
            }

            Button {
                marginTop: theme.paddingSmall
                marginRight: theme.paddingSmall
                text: "Push Page"
                onClick: {
                    page.pageStack.pushPage(page.customPage3T);
                }
            }

            Button {
                marginTop: theme.paddingSmall
                marginRight: theme.paddingSmall
                text: "Push Page"
                onClick: {
                    page.pageStack.pushPage(page.customPage4T);
                }
            }
        }

    }

}